<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://fanqiangmianfei.github.io/news/article-102198.htm" />
    <title>Spring Boot Web项目ConcurrentLinkedQueue+ReentrantLock+Condition实现消费者功能(类似MQ队列)</title>
        <meta name="description" content="大纲  Spring Boot Web项目(含源码)ConcurrentLinkedQueue+ReentrantLock+Condition实现消费者功能(类似MQ队列)   业务场景   项目结构" />
        <link rel="icon" href="/assets/website/img/clashmetanode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="翻墙免费 VPN免费节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://fanqiangmianfei.github.io/news/article-102198.htm" />
    <meta property="og:site_name" content="翻墙免费 VPN免费节点订阅官网" />
    <meta property="og:title" content="Spring Boot Web项目ConcurrentLinkedQueue+ReentrantLock+Condition实现消费者功能(类似MQ队列)" />
    <meta property="og:image" content="https://fanqiangmianfei.github.io/uploads/20240413/a4b323dbaf5b9fdbfbee5ac77cdf5114.webp" />
        <meta property="og:release_date" content="2025-04-23T08:42:49" />
    <meta property="og:updated_time" content="2025-04-23T08:42:49" />
        <meta property="og:description" content="大纲  Spring Boot Web项目(含源码)ConcurrentLinkedQueue+ReentrantLock+Condition实现消费者功能(类似MQ队列)   业务场景   项目结构" />
        
    <link href="/assets/website/css/clashmetanode/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!--theme-style-->
    <link href="/assets/website/css/clashmetanode/style.css" rel="stylesheet" type="text/css" media="all">
    <!--//theme-style-->
    <link href="/assets/website/css/clashmetanode/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Spring Boot Web项目ConcurrentLinkedQueue+ReentrantLock+Condition实现消费者功能(类似MQ队列)">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">

    <!-- script -->
    <script src="/assets/website/js/frontend/clashmetanode/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/clashmetanode/move-top.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/clashmetanode/easing.js"></script>
    <link type="text/css" rel="stylesheet" href="/assets/website/css/clashmetanode/jquery.mmenu.all.css" />
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <script type="text/javascript">
    $(window).load(function() {
        $('div.description').each(function() {
            $(this).css('display', 'block');
        });

        $('div.content-top-grid').hover(function() {
            $(this).children('.description').stop().fadeTo(500, 1);
        }, function() {
            $(this).children('.description').stop().fadeTo(500, 0);
        });

    });
    </script>
    <script type="text/javascript" src="/assets/website/js/frontend/clashmetanode/jquery.mmenu.js"></script>
    <script type="text/javascript">
    //	The menu on the left
    $(function() {
        $('nav#menu-left').mmenu();
    });
    </script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-BKNKQRESX2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-BKNKQRESX2');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--header-->
    <div class="header">
        <a class="navicon" href="#menu-left"> </a>
        <div class="container">
            <div class="header-matter">
                <h1>Spring Boot Web项目ConcurrentLinkedQueue+ReentrantLock+Condition实现消费者功能(类似MQ队列)</h1>
                <p>
                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                </p>
            </div>
        </div>
                <nav id="menu-left">
            <ul>
                                <li><a href="/">首页</a></li>
                                <li><a href="/free-nodes/">免费节点</a></li>
                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                <li><a href="/news/">新闻资讯</a></li>
                                <li><a href="/client.htm">客户端</a></li>
                            </ul>
        </nav>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            $(".scroll").click(function(event) {
                event.preventDefault();
                $('html,body').animate({ scrollTop: $(this.hash).offset().top }, 1000);
            });
        });
        </script>
    </div>
    <div class="clearfix"> </div>
    <!--//header-->
    <!--content-->
    <div class="content">
        <!--our-news-->
        <div class="our-news" id="news">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                <div class="xcblog-blog-detail">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <div class="toc"> <h3>大纲</h3> <ul> <li><a href="#Spring_Boot_WebConcurrentLinkedQueueReentrantLockConditionMQ_1" rel="nofollow">Spring Boot Web项目(含源码)ConcurrentLinkedQueue+ReentrantLock+Condition实现消费者功能(类似MQ队列)</a></li> <li> <ul> <li><a href="#_2" rel="nofollow">业务场景</a></li> <li> <ul> <li><a href="#_5" rel="nofollow">项目结构</a></li> <li><a href="#_7" rel="nofollow">代码</a></li> <li> <ul> <li> <ul> <li> <ul> <li><a href="#_8" rel="nofollow">消费者核心代码</a></li> <li><a href="#_47" rel="nofollow">生产者代码</a></li> <li><a href="#_73" rel="nofollow">生产者和消费者共同使用的队列等资源代码</a></li> <li><a href="#_90" rel="nofollow">项目启动加载线程池代码</a></li> </ul> </li> </ul> </li> </ul> </li> <li><a href="#_140" rel="nofollow">项目启动后如图</a></li> <li><a href="#ControllerService_143" rel="nofollow">Controller和Service代码</a></li> <li><a href="#_184" rel="nofollow">前台页面推送数据</a></li> <li><a href="#_186" rel="nofollow">控制台效果如图</a></li> <li><a href="#_188" rel="nofollow">队列正常消费接收到邮箱号就处理发送邮件.</a></li> </ul> </li> <li><a href="#_191" rel="nofollow">总结</a></li> <li><a href="#_194" rel="nofollow">项目地址</a></li> </ul> </li> </ul> </div> </h1> <h2> <a id="_2" rel="nofollow"></a>业务场景</h2> <p>前台注册时,给用户的邮箱异步发送邮件用于激活账户.服务器资源紧张不能引入MQ队列来实现,所以用JUC写了个消费者功能废话不多说直接上代码</p> <h3> <a id="_5" rel="nofollow"></a>项目结构</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230217/ae3b752d34438af841a042c5c2959523.jpg" alt="Spring Boot Web项目ConcurrentLinkedQueue+ReentrantLock+Condition实现消费者功能(类似MQ队列)"></p> <h3> <a id="_7" rel="nofollow"></a>代码</h3> <h6> <a id="_8" rel="nofollow"></a>消费者核心代码</h6> <pre><code class="prism language-java"><span class="token comment">/**  * 描述: 消费者线程  * date: 2020/6/22 0022  **/</span> <span class="token annotation punctuation">@Slf4j</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConsumerTask</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{<!-- --></span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token function">doConsumer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">doConsumer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         ConsumerTaskHolder<span class="token punctuation">.</span>lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">try</span><span class="token punctuation">{<!-- --></span>             <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>                  <span class="token keyword">while</span> <span class="token punctuation">(</span>ConsumerTaskHolder<span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>                     log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"队列中无数据等待数据中......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     ConsumerTaskHolder<span class="token punctuation">.</span>notEmpty<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span>                  <span class="token comment">//消费邮箱</span>                 String email <span class="token operator">=</span> ConsumerTaskHolder<span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"收到邮箱:{},发送邮件......"</span><span class="token punctuation">,</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">// 处理逻辑 发送邮件..... some action</span>             <span class="token punctuation">}</span>          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{<!-- --></span>             ConsumerTaskHolder<span class="token punctuation">.</span>lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <h6> <a id="_47" rel="nofollow"></a>生产者代码</h6> <pre><code class="prism language-java"><span class="token comment">/**  * 描述: 提供者主要用于给队列推送数据  * date: 2020/6/22 0022  **/</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProviderTask</span> <span class="token punctuation">{<!-- --></span>      <span class="token comment">/**      * 给队列推送数据      * @param email      */</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">pushQueue</span><span class="token punctuation">(</span>String email<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         ConsumerTaskHolder<span class="token punctuation">.</span>lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>             ConsumerTaskHolder<span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">//唤醒消费者线程处理任务啦</span>             ConsumerTaskHolder<span class="token punctuation">.</span>notEmpty<span class="token punctuation">.</span><span class="token function">signalAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{<!-- --></span>             ConsumerTaskHolder<span class="token punctuation">.</span>lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <h6> <a id="_73" rel="nofollow"></a>生产者和消费者共同使用的队列等资源代码</h6> <pre><code class="prism language-java"><span class="token comment">/**  * 描述: 消费者相关资源  * date: 2020/6/22 0022  **/</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConsumerTaskHolder</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">public</span> <span class="token keyword">static</span> Lock lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> Condition notEmpty <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">/**      * 存放数据的队列      */</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> ConcurrentLinkedQueue<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">&gt;</span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentLinkedQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> </code></pre> <h6> <a id="_90" rel="nofollow"></a>项目启动加载线程池代码</h6> <pre><code class="prism language-java"><span class="token comment">/**  * 描述: 线程池启动加载  * date: 2020/6/22 0022  **/</span> <span class="token annotation punctuation">@Slf4j</span> <span class="token annotation punctuation">@Component</span> <span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConsumerThreadPool</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationRunner</span> <span class="token punctuation">{<!-- --></span>     <span class="token comment">/**      * 线程池      */</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> ExecutorService executorService <span class="token operator">=</span> Executors<span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span>ApplicationArguments args<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"加载线程池中........."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>             ConsumerTask consumerTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConsumerTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             executorService<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>consumerTask<span class="token punctuation">)</span><span class="token punctuation">;</span>             log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"线程池启动完成......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"线程池启动报错了......."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>       <span class="token comment">/**      * 项目销毁前执行      */</span>     <span class="token annotation punctuation">@PreDestroy</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>             executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//优雅的关闭</span>             log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"关闭线程池...."</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//          List&lt;Runnable&gt; runnables = executorService.shutdownNow();//直接关闭</span> <span class="token comment">//          log.debug("未执行完的任务,"+runnables);</span>         <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"线程池关闭失败..."</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>             e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>      <span class="token punctuation">}</span>   <span class="token punctuation">}</span> </code></pre> <h3> <a id="_140" rel="nofollow"></a>项目启动后如图</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230217/fd63da9d88baac71787e941aad32a58b.jpg" alt="Spring Boot Web项目ConcurrentLinkedQueue+ReentrantLock+Condition实现消费者功能(类似MQ队列)"></p> <h3> <a id="ControllerService_143" rel="nofollow"></a>Controller和Service代码</h3> <pre><code class="prism language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/system"</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@Controller</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SystemController</span> <span class="token punctuation">{<!-- --></span>      <span class="token annotation punctuation">@Autowired</span>     UserService userService<span class="token punctuation">;</span>      <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/{path}"</span><span class="token punctuation">)</span>     <span class="token keyword">public</span> String <span class="token function">index</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span>  String path<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> path<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token annotation punctuation">@ResponseBody</span>     <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/register"</span><span class="token punctuation">)</span>     <span class="token keyword">public</span> Map <span class="token function">register</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         Map resultMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         userService<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> resultMap<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <pre><code class="prism language-java"><span class="token annotation punctuation">@Slf4j</span> <span class="token annotation punctuation">@Service</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{<!-- --></span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">register</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         String email <span class="token operator">=</span> user<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//给队列推送邮箱账号过去,队列处理发送邮件</span>         ProviderTask<span class="token punctuation">.</span><span class="token function">pushQueue</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">//some action</span>         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"保存用户信息到数据库"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <h3> <a id="_184" rel="nofollow"></a>前台页面推送数据</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230217/009e4c088570403c3c15186176005a05.jpg" alt="Spring Boot Web项目ConcurrentLinkedQueue+ReentrantLock+Condition实现消费者功能(类似MQ队列)"></p> <h3> <a id="_186" rel="nofollow"></a>控制台效果如图</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230217/f4325a2cdf3a7251d51ce7704433de85.jpg" alt="Spring Boot Web项目ConcurrentLinkedQueue+ReentrantLock+Condition实现消费者功能(类似MQ队列)"></p> <h3> <a id="_188" rel="nofollow"></a>队列正常消费接收到邮箱号就处理发送邮件.</h3> <h2> <a id="_191" rel="nofollow"></a>总结</h2> <p>项目启动后消费者就会等待数据,生产者推送一个数据过去后唤醒消费者,消费者线程接收到唤醒信号去消费数据.反复如此,由于是Demo所以代码比较简单,实际业务中的问题自行完善即可.</p> <h2> <a id="_194" rel="nofollow"></a>项目地址</h2> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/leijianglong/JUC-consumer-queue"  rel="nofollow">项目地址</a></p> </p></div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-101405.htm">mysql5.7版本的窗口函数实现</a></p>
                                        <p>下一个：<a href="/news/article-102200.htm">mysql 锁 读锁 写锁 共享锁 排它锁 表锁 行锁 悲观锁 乐观锁</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                    	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-94834.htm" title="猫咪3针疫苗多少钱一针啊（猫咪三针疫苗都是什么多少钱）">猫咪3针疫苗多少钱一针啊（猫咪三针疫苗都是什么多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-83111.htm" title="linux查看redis的主从,linux中redis的主从">linux查看redis的主从,linux中redis的主从</a></li>
                        <li class="py-2"><a href="/news/article-76885.htm" title="狗狗领养平台公众号有哪些（狗狗领养网站）">狗狗领养平台公众号有哪些（狗狗领养网站）</a></li>
                        <li class="py-2"><a href="/news/article-80300.htm" title="动物诊疗许可证申领条件有哪些要求（动物诊疗许可证申领准备材料）">动物诊疗许可证申领条件有哪些要求（动物诊疗许可证申领准备材料）</a></li>
                        <li class="py-2"><a href="/news/article-83112.htm" title="领养宠物协议有法律效力吗怎么写（领养宠物协议有法律效力吗怎么写的）">领养宠物协议有法律效力吗怎么写（领养宠物协议有法律效力吗怎么写的）</a></li>
                        <li class="py-2"><a href="/news/article-74188.htm" title="哪里有免费领养的猫（哪里可以免费领养小猫）">哪里有免费领养的猫（哪里可以免费领养小猫）</a></li>
                        <li class="py-2"><a href="/news/article-90898.htm" title="包含猫领养免费平台的词条">包含猫领养免费平台的词条</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-6-node-share.htm" title="VPN翻墙免费 | 4月6日18.2M/S|免费Shadowrocket/SSR/Clash/V2ray订阅节点分享">VPN翻墙免费 | 4月6日18.2M/S|免费Shadowrocket/SSR/Clash/V2ray订阅节点分享</a></li>
                        <li class="py-2"><a href="/news/article-102200.htm" title="mysql 锁 读锁 写锁 共享锁 排它锁 表锁 行锁 悲观锁 乐观锁">mysql 锁 读锁 写锁 共享锁 排它锁 表锁 行锁 悲观锁 乐观锁</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-26-free-node-subscribe.htm" title="VPN翻墙免费 | 3月26日18.4M/S|免费V2ray/Shadowrocket/SSR/Clash订阅节点分享">VPN翻墙免费 | 3月26日18.4M/S|免费V2ray/Shadowrocket/SSR/Clash订阅节点分享</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">67</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">72</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--//content-->
        <!--footer-->
    <div class="footer">
        <div class="container">
                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
            <p>
                翻墙免费 VPN免费节点订阅官网 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
    </div>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>